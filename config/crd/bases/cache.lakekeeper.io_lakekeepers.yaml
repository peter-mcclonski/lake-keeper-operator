---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: lakekeepers.cache.lakekeeper.io
spec:
  group: cache.lakekeeper.io
  names:
    kind: Lakekeeper
    listKind: LakekeeperList
    plural: lakekeepers
    singular: lakekeeper
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Lakekeeper is the Schema for the lakekeepers API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: LakekeeperSpec defines the desired state of Lakekeeper
            properties:
              auth:
                properties:
                  oauth2:
                    properties:
                      client_id:
                        description: The client id of the OIDC App of the catalog.
                          The aud (audience) claim of the JWT token must match this
                          id.
                        type: string
                      provider_uri:
                        description: 'If set, access to rest endpoints is secured
                          via an external OIDC-capable IdP. The IdP must expose {provider_url}/.well-known/openid-configuration
                          and the openid-configuration needs to have the jwks_uri
                          and issuer defined. For keycloak set: https://keycloak.local/realms/test
                          For Entra-ID set: https://login.microsoftonline.com/{your-tenant-id}/v2.0'
                        type: string
                    required:
                    - client_id
                    - provider_uri
                    type: object
                type: object
              catalog:
                properties:
                  image:
                    properties:
                      gid:
                        default: 65534
                        description: 65534 = nobody of google container distroless
                        format: int32
                        type: integer
                      pullPolicy:
                        default: IfNotPresent
                        description: The image pull policy
                        type: string
                      repository:
                        default: quay.io/lakekeeper/catalog
                        description: The image repository to pull from
                        type: string
                      tag:
                        default: v0.4.3
                        description: The image tag to pull
                        type: string
                      uid:
                        default: 65532
                        description: 65532 = nonroot of google container distroless
                        format: int32
                        type: integer
                    required:
                    - tag
                    - uid
                    type: object
                  replicas:
                    default: 1
                    description: Number of replicas to deploy. Replicas are stateless.
                    format: int32
                    type: integer
                type: object
            type: object
          status:
            description: LakekeeperStatus defines the observed state of Lakekeeper
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
